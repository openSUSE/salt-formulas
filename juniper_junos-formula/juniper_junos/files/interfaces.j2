{%- from 'macros.jinja' import expand_recurse %}
{#- FIXME: move these to context variables #}
{%- set interfaces = salt['pillar.get']('juniper_junos:interfaces') -%}
{%- set present_interfaces = salt['susejunos.get_active_interfaces']() -%}

{%- set ignored_interfaces = salt['pillar.get']('juniper_junos:ignore', {}).get('interfaces', []) -%}
{%- set reth_ns = namespace(count=0) %}

{%- for interface in present_interfaces %}
{%- if interface not in ignored_interfaces %}
delete interfaces {{ interface }}
{%- endif %}
{%- endfor %}

{%- for ifname, ifconfig in interfaces.items() %}
{%- set setif = 'set interfaces ' ~ ifname -%}

{%- if ifname.startswith('reth') %}
{%- set reth_ns.count = reth_ns.count + 1 %}
{%- if 'redundancy-group' in ifconfig %}
{{ setif }} redundant-ether-options redundancy-group {{ ifconfig['redundancy-group'] }}
{%- endif %}
{%- endif %}

{%- if 'description' in ifconfig %}
{{ setif }} description "{{ ifconfig['description'] }}"
{%- endif %}

{%- if 'disable' in ifconfig and ifconfig['disable'] %}
{{ setif }} disable
{%- endif %}

{%- if 'speed' in ifconfig %}
{{ setif }} speed {{ ifconfig['speed'] | lower }}
{%- endif %}

{%- if not 'lacp' in ifconfig and not ifname.startswith(('em', 'fxp', 'vme')) %} {#- setting the MTU on a ae children or management interfaces is not allowed #}
{%- if pillar.get('simulation', False) %}
{%- set default_mtu = 1500 %}
{%- else %}
{%- set default_mtu = 9216 %}
{%- endif %}
{{ setif }} mtu {{ ifconfig.get('mtu', default_mtu) }}
{%- endif %}

{%- set units = ifconfig.get('units', {}) %}
{%- for unit, uconfig in units.items() %}

{%- if 'description' in uconfig %}
{{ setif }} unit {{ unit }} description "{{ uconfig['description'] }}"
{%- endif %}

{%- if 'inet' in uconfig %}
{%- for address in uconfig.inet.get('addresses', []) %}
{{ setif }} unit {{ unit }} family inet address {{ address }}
{%- endfor %}
{%- endif %}

{%- if 'inet6' in uconfig %}
{%- for address in uconfig.inet6.get('addresses', []) %}
{{ setif }} unit {{ unit }} family inet6 address {{ address }}
{%- endfor %}
{%- endif %}

{%- if 'vlan' in uconfig %}
{%- set vtype = uconfig['vlan'].get('type', None) %}
{%- if vtype in ['access', 'trunk'] %}
{{ setif }} unit {{ unit }} family ethernet-switching interface-mode {{ vtype }}
{{ setif }} unit {{ unit }} family ethernet-switching vlan members [ {{ uconfig['vlan']['ids'] | join(' ') }} ]
{%- endif %}
{%- endif %}

{%- endfor %} {#- close unit loop -#}

{%- if 'reth' in ifconfig %}
{{ setif }} ether-options redundant-parent {{ ifconfig['reth'] }}
{%- endif %}

{%- if 'lacp' in ifconfig %}
{{ setif }} ether-options 802.3ad {{ ifconfig['lacp'] }}
{%- endif %}

{%- if 'ae' in ifconfig %}
{%- set aec = ifconfig['ae'] -%}
{%- set setifae = setif ~ ' aggregated-ether-options ' -%}

{%- if 'lacp' in aec %}
{%- set aecl = aec['lacp'] -%}
{%- set setifael = setifae ~ 'lacp' -%}

{%- if aecl.get('force-up', False) %}
{{ setifael }} force-up
{%- endif %}

{%- if 'periodic' in aecl and aecl.periodic in ['fast', 'slow'] %}
{{ setifael }} periodic {{ aecl.periodic }}
{%- endif %}

{%- if 'mode' in aecl and aecl.mode in ['active', 'passive'] %}
{{ setifael }} {{ aecl.mode }}
{%- endif %}

{%- for aestr in ['system-id', 'admin-key'] %}
{%- if aestr in aecl and aecl[aestr] %}
{{ setifael }} {{ aestr }} {{ aecl[aestr] }}
{%- endif %}
{%- endfor %}

{%- endif %} {#- close lacp check -#}

{%- if 'mc' in aec %}
{%- set mclc = aec['mc'] -%}
{%- set setifaemc = setifae ~ 'mc-ae' -%}

{{ setifaemc }} mode {{ mclc.pop('mode', 'active-active') }}

{%- for option, value in mclc.items() %}
{{ expand_recurse(option, value, setifaemc) }}
{%- endfor %}

{%- endif %} {#- close mc check -#}
{%- endif %} {#- close ae check -#}

{%- endfor %} {#- close ifconfig loop -#}

{%- if reth_ns.count > 0 %}
set chassis cluster reth-count {{ reth_ns.count }}
{%- endif %}
