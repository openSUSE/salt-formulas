{%- macro nft_sets(sets) -%}
{%- for set, set_config in sets.items() %}
set {{ set }} =
  {%- if 'type' in set_config %}
  type {{ set_config['type'] }}
  {%- endif %}
  {{ nft_flags(set_config.get('flags', none)) }}
  {%- if set_config.get('auto-merge', False) %}
  auto-merge
  {%- endif %}
  {%- if set_config.get('counter', False) %}
  counter
  {%- endif %}
  {%- if 'policy' in set_config %}
  policy {{ set_config['policy'] }}
  {%- endif %}
  {%- if 'timeout' in set_config %}
  timeout {{ set_config['timeout'] }}
  {%- endif %}
  elements = {
    {%- for element in set_config.get('elements', []) %}
    {{ element }},
    {%- endfor %}
  }
{%- endfor %}
{%- endmacro -%}

{%- macro nft_variables(variables) -%}
{%- for variable, contents in variables.items() %}
define {{ variable }} ={{ ' ' }}
  {%- if contents is string -%}
  {{ contents }}
  {%- elif contents is iterable and contents is not mapping -%}
  {
  {%- for value in contents %}
  {{ value }},
  {%- endfor %}
}
  {%- endif -%}
{%- endfor -%}
{%- endmacro -%}

{%- macro nft_chains(chains) -%}
{%- for chain, chain_config in chains.items() %}
chain {{ chain }} {
  {%- if 'type' in chain_config %}
  type {{ chain_config['type'] }}
  {%- if 'hook' in chain_config -%}
  {{ ' hook ' ~ chain_config['hook'] }}
  {%- endif -%}
  {%- if 'priority' in chain_config -%}
  {{ ' priority ' ~ chain_config['priority'] }}
  {%- endif -%}
  {%- endif %}
  {%- if 'policy' in chain_config %}
  policy {{ chain_config['policy'] }}
  {%- endif %}
  {%- if 'jump' in chain_config %}
  {%- if chain_config['jump'] is string %}
  {%- set chain_jumps = [chain_config['jump']] %}
  {%- elif chain_config['jump'] is iterable and chain_config['jump'] is not mapping %}
  {%- set chain_jumps = chain_config['jump'] %}
  {%- else %}
  {%- do salt.log.error('nftables: illegal value for jump in chain ' ~ chain) %}
  {%- endif %}
  {%- for chain_jump in chain_jumps %}
  jump {{ chain_jump }}
  {%- endfor %}
  {%- endif %}
  {%- if 'maps' in chain_config %}
  {{ nft_maps(chain_config['maps']) | indent(2) }}
  {%- endif -%}
  {%- if 'vmaps' in chain_config %}
  {{ nft_vmaps(chain_config['vmaps']) | indent(2) }}
  {%- endif %}
  {%- for entry in chain_config.get('rules', []) %}
  {{ entry }}
  {%- endfor %}
  {%- if chain_config.get('counter', False) %}
  counter
  {%- endif %}
  {%- if 'log' in chain_config %}
  {%- set log_config = chain_config['log'] %}
  log{{ ' prefix "' ~ log_config['prefix'] ~ '"' if 'prefix' in log_config else '' }}{{ nft_flags(log_config.get('flags', none), ' ') }}
  {%- endif %}
}
{%- endfor -%}
{%- endmacro -%}

{%- macro nft_flags(flags, prefix='') -%}
{%- if flags is not none -%}
{%- if flags is string or ( flags is iterable and flags is not mapping ) -%}
{{ prefix }}flags {{ flags if flags is string else ' '.join(flags) }}
{%- else -%}
{%- do salt.log.error('nftables: illegal flags') -%}
{%- endif -%}
{%- endif %}
{%- endmacro -%}

{%- macro _nft_maps(maps, type) -%}
{%- for map, map_config in maps.items() %}
{{ map }} {{ type }} {
  {%- for map_from, map_to in map_config.items() %}
  {{ map_from }} : {{ map_to }}
  {%- endfor %}
}
{%- endfor %}
{%- endmacro -%}

{%- macro nft_maps(maps) -%}
{{ _nft_maps(maps, 'map') }}
{%- endmacro -%}

{%- macro nft_vmaps(vmaps) -%}
{{ _nft_maps(vmaps, 'vmap') }}
{%- endmacro -%}