{%- macro nft_sets(sets) -%}
{%- for set, set_config in sets.items() %}
set {{ set }} =
  {%- if 'type' in set_config %}
  type {{ set_config['type'] }}
  {%- endif %}
  {%- if 'flags' in set_config %}
  flags {{ set_config['flags'] if set_config['flags'] is string else ' '.join(set_config['flags']) }}
  {%- endif %}
  {%- if set_config.get('auto-merge', False) %}
  auto-merge
  {%- endif %}
  {%- if set_config.get('counter', False) %}
  counter
  {%- endif %}
  {%- if 'policy' in set_config %}
  policy {{ set_config['policy'] }}
  {%- endif %}
  {%- if 'timeout' in set_config %}
  timeout {{ set_config['timeout'] }}
  {%- endif %}
  elements = {
    {%- for element in set_config.get('elements', []) %}
    {{ element }},
    {%- endfor %}
  }
{%- endfor %}
{%- endmacro -%}

{%- macro nft_variables(variables) -%}
{%- for variable, contents in variables.items() %}
define {{ variable }} ={{ ' ' }}
  {%- if contents is string -%}
  {{ contents }}
  {%- elif contents is iterable and contents is not mapping -%}
  {
  {%- for value in contents %}
  {{ value }},
  {%- endfor %}
}
  {%- endif -%}
{%- endfor -%}
{%- endmacro -%}

{%- macro nft_chains(chains) -%}
{%- for chain, chain_config in chains.items() %}
chain {{ chain }} {
  {%- if 'type' in chain_config %}
  type {{ chain_config['type'] }}
  {%- if 'hook' in chain_config -%}
  {{ ' hook ' ~ chain_config['hook'] }}
  {%- endif -%}
  {%- if 'priority' in chain_config -%}
  {{ ' priority ' ~ chain_config['priority'] }}
  {%- endif -%}
  {%- endif %}
  {%- if 'policy' in chain_config %}
  policy {{ chain_config['policy'] }}
  {%- endif %}
  {%- if 'jump' in chain_config %}
  jump {{ chain_config['jump'] }}
  {%- endif %}
  {%- if 'vmaps' in chain_config %}
  {{ nft_vmaps(chain_config['vmaps']) | indent(2) }}
  {%- endif %}
  {%- for entry in chain_config.get('rules', []) %}
  {{ entry }}
  {%- endfor %}
}
{%- endfor -%}
{%- endmacro -%}

{%- macro nft_vmaps(vmaps) -%}
{%- for vmap, vmap_config in vmaps.items() %}
{{ vmap }} vmap {
  {%- for map_from, map_to in vmap_config.items() %}
  {{ map_from }} : {{ map_to }}
  {%- endfor %}
}
{%- endfor %}
{%- endmacro -%}
